# -*- coding: utf-8 -*-
"""chargeanalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1biYSgHfNB00xyvV0uF8zj_Nk0vCQhBLD
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

cpath='../content/Data/Charge/B0005.csv'
dpath='../content/Data/Discharge/B0005.csv'

from google.colab import drive
drive.mount('/content/drive')

import os
import zipfile

zipref=zipfile.ZipFile('../content/drive/My Drive/Data.zip')
zipref.extractall()
zipref.close()

df2=pd.read_csv(cpath)

df2.Date[0]

df2.Date=pd.to_datetime(df2.Date)

df2=df2.set_index('Date')

df2.dtypes

df2=df2.drop('Unnamed: 0',axis=1)

df2.head()

sns.set(rc={'figure.figsize':(11,4)})

df2['voltage_battery'].plot(linewidth=0.5)

"""OUTLIER at 22-04-2008"""

cols=['current_battery','current_load','temp_battery','time','voltage_battery','voltage_load']
axes=df2.loc['04-2008','voltage_battery'].plot(marker='.',alpha=1.0,figsize=(11,9),subplots=True)

axes=df2['voltage_battery'].plot(alpha=1.0,figsize=(11,9),subplots=True)

corr=df2.corr()
ax=sns.heatmap(corr,vmin=-1,vmax=1,center=0, cmap=sns.diverging_palette(20, 220, n=200),square=True,annot=True)
ax.set_xticklabels(
    ax.get_xticklabels(),
    rotation=45,
    horizontalalignment='right'
);

"""Heightest correlation feature-: Current Battery"""

df4=df2.drop('current_battery',axis=1)

df4.dtypes

"""Correlation Matrix after dropping the highest feature"""

corr=df4.corr()
ax=sns.heatmap(corr,vmin=-1,vmax=1,center=0.5, cmap=sns.diverging_palette(10, 220, n=200),square=True,annot=True)
ax.set_xticklabels(
    ax.get_xticklabels(),
    rotation=45,
    horizontalalignment='right'
);

"""RESAMPLING"""

cols=['current_battery','current_load','temp_battery','time','voltage_battery','voltage_load']

df_mean=df2[cols].resample('10S').mean()

df_mean[df_mean['time']!='NaN']

len(df_mean)

df2.dtypes

"""ANOMALY DETECTION"""

df2['voltage_battery'].describe()

"""MAX=8.393141, with mean=4.158, Point Anomaly"""

df2[df2['voltage_battery']==8.393141180564632]

df2.describe()

df2.plot(x='Cycle', y='current_load', figsize=(12,6))
df2.plot(x='Cycle', y='temp_battery', figsize=(12,6))

anomaly=df2['current_battery'].min()
a = df2.loc[df2['current_battery']==anomaly]
fig,ax=plt.subplots(figsize=(10,6))
ax.plot(df2['Cycle'],df2['current_battery'], color='blue', label='Normal')
ax.scatter(a['Cycle'],a['current_battery'], color='red', label='Anomaly')
plt.xlabel('Cycle')
plt.ylabel('Current_battery')
plt.legend()
plt.show();

anomaly=df2['voltage_battery'].max()
anomaly

a = df2.loc[df2['voltage_battery']==anomaly]
fig,ax=plt.subplots(figsize=(10,6))
ax.plot(df2['Cycle'],df2['voltage_battery'], color='blue', label='Normal')
ax.scatter(a['Cycle'],a['voltage_battery'], color='red', label='Anomaly')
plt.xlabel('Cycle')
plt.ylabel('Voltage_battery')
plt.legend()
plt.show();

anomaly=df2['current_battery'].min()
a = df2.loc[df2['current_battery']==anomaly]
fig,ax=plt.subplots(figsize=(10,6))
ax.plot(df2['Cycle'],df2['current_battery'], color='blue', label='Normal')
ax.scatter(a['Cycle'],a['current_battery'], color='red', label='Anomaly')
plt.xlabel('Cycle')
plt.ylabel('Current_battery')
plt.legend()
plt.show();